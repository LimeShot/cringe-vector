<Window x:Name="MainWindowElement"
        x:Class="CringeCraft.Client.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:glWpfControl="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:CringeCraft.Client.Model.Tool"
        Title="Владычество кринжа 1: Наследие позора"
        Height="450"
        Width="800">

    <Window.Resources>
        <local:StringToFloatConverter x:Key="StringToFloatConverter"/>
        <local:StringToIntConverter x:Key="StringToIntConverter"/>
        <Style x:Key="ListboxStyle"
               TargetType="ListBox">
            <Style.Resources>
                <Style x:Key="ScrollBarThumbVertical"
                       TargetType="{x:Type Thumb}">
                    <Setter Property="OverridesDefaultStyle"
                            Value="true"/>
                    <Setter Property="IsTabStop"
                            Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Rectangle x:Name="rectangle"
                                           Fill="#CDCDCD"
                                           Height="{TemplateBinding Height}"
                                           SnapsToDevicePixels="True"
                                           Width="{TemplateBinding Width}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="true">
                                        <Setter Property="Fill"
                                                TargetName="rectangle"
                                                Value="#A6A6A6"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging"
                                             Value="true">
                                        <Setter Property="Fill"
                                                TargetName="rectangle"
                                                Value="#606060"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="RepeatButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RepeatButton">
                                <Grid>
                                    <ContentPresenter></ContentPresenter>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Stylus.IsPressAndHoldEnabled"
                            Value="false"/>
                    <Setter Property="Stylus.IsFlicksEnabled"
                            Value="false"/>
                    <Setter Property="BorderThickness"
                            Value="1,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg"
                                      Width="8"
                                      Margin="0,15,0,15"
                                      Background="Transparent"
                                      SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition  MaxHeight="0"/>
                                        <RowDefinition Height="0.00001*"/>
                                        <RowDefinition Height="0"/>
                                    </Grid.RowDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            Grid.Row="1"/>
                                    <RepeatButton Height="0"
                                                  Width="0"
                                                  x:Name="PART_LineUpButton"
                                                  Command="{x:Static ScrollBar.LineUpCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"/>
                                    <Track x:Name="PART_Track"
                                           IsDirectionReversed="true"
                                           IsEnabled="{TemplateBinding IsMouseOver}"
                                           Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                          Background="Transparent"
                                                          BorderBrush="Transparent"
                                                          BorderThickness="0"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                          Background="Transparent"
                                                          BorderBrush="Transparent"
                                                          BorderThickness="0"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineDownButton"
                                                  Height="0"
                                                  Width="0"
                                                  Command="{x:Static ScrollBar.LineDownCommand}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Grid.Row="2"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type ScrollViewer}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                                <Grid x:Name="Grid"
                                      HorizontalAlignment="Right">
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                                            CanHorizontallyScroll="False"
                                                            CanVerticallyScroll="False"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Content="{TemplateBinding Content}"
                                                            Margin="{TemplateBinding Padding}"/>
                                    <ScrollBar x:Name="PART_VerticalScrollBar"
                                               HorizontalAlignment="Right"
                                               AutomationProperties.AutomationId="VerticalScrollBar"
                                               Cursor="Arrow"
                                               Maximum="{TemplateBinding ScrollableHeight}"
                                               Minimum="0"
                                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                               Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               ViewportSize="{TemplateBinding ViewportHeight}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Z"
                    Modifiers="Control"
                    Command="{Binding UndoCommand}"/>
        <KeyBinding Key="Y"
                    Modifiers="Control"
                    Command="{Binding RedoCommand}"/>
        <KeyBinding Key="Delete"
                    Command="{Binding DeleteCommand}"/>
        <KeyBinding Key="C"
                    Modifiers="Control"
                    Command="{Binding CopyCommand}"/>
        <KeyBinding Key="V"
                    Modifiers="Control"
                    Command="{Binding PasteCommand}"/>
        <KeyBinding Key="S"
                    Modifiers="Control"
                    Command="{Binding SaveFileCommand}"/>
        <KeyBinding Key="O"
                    Modifiers="Control"
                    Command="{Binding OpenFileCommand}"/>
        <KeyBinding Key="Down"
                    Modifiers="Control+Shift"
                    Command="{Binding BringToBackCommand}"/>
        <KeyBinding Key="Up"
                    Modifiers="Control+Shift"
                    Command="{Binding BringToFrontCommand}"/>
        <KeyBinding Key="V"
                    Modifiers="Control+Alt"
                    Command="{Binding ReflectVerticallyCommand}"/>
        <KeyBinding Key="G"
                    Modifiers="Control+Alt"
                    Command="{Binding ReflectHorizontallyCommand}"/>
        <KeyBinding Key="A"
                    Modifiers="Control"
                    Command="{Binding SelectAllCommand}"/>
    </Window.InputBindings>

    <DockPanel>
        <Menu x:Name="TopMenu"
              DockPanel.Dock="Top">
            <MenuItem Header="_Файл">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SubmenuOpened">
                        <i:InvokeCommandAction Command="{Binding TopMenuOpenedCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SubmenuClosed">
                        <i:InvokeCommandAction Command="{Binding TopMenuClosedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem Header="_Создать">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/new.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Сохранить"
                          Command="{Binding SaveFileCommand}"
                          InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/save.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Открыть"
                          Command="{Binding OpenFileCommand}"
                          InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/open.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Холст">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SubmenuOpened">
                        <i:InvokeCommandAction Command="{Binding TopMenuOpenedCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SubmenuClosed">
                        <i:InvokeCommandAction Command="{Binding TopMenuClosedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem Header="_Изменить размер"
                          Command="{Binding ChangeCanvasSizeCommand}">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/canvas_size.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Очистить холст"
                          Command="{Binding DeleteAllShapesCommand}"
                          CommandParameter="{Binding}">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/clear_canvas.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Выделить все"
                          Command="{Binding SelectAllCommand}"
                          InputGestureText="Ctrl+A">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/sellect_all.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Действия">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SubmenuOpened">
                        <i:InvokeCommandAction Command="{Binding TopMenuOpenedCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SubmenuClosed">
                        <i:InvokeCommandAction Command="{Binding TopMenuClosedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem Header="Отменить"
                          Command="{Binding UndoCommand}"
                          InputGestureText="Ctrl+Z">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/undo.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Повторить"
                          Command="{Binding RedoCommand}"
                          InputGestureText="Ctrl+Y">
                    <MenuItem.Icon>
                        <Image Source="pack://siteoforigin:,,,/assets/icons/redo.png"
                               Width="16"
                               Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!-- Простая советская горизонтальная линия -->
        <Border Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                Height="4"
                Width="1"
                DockPanel.Dock="Top"/>

        <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal"
                    Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
            <TextBlock Text="Цвет контура:"
                       VerticalAlignment="Center"
                       Margin="5"/>
            <xctk:ColorPicker x:Name="OutlineColorPicker"
                              IsTabStop="False"
                              Width="50"
                              Margin="5"
                              SelectedColor="{Binding Canvas.SelectedOutlineColor, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedColorChanged">
                        <i:InvokeCommandAction Command="{Binding ChangeOutLineColorCommand}"
                                               CommandParameter="{Binding Canvas.SelectedOutlineColor}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </xctk:ColorPicker>

            <TextBlock Text="Цвет заливки:"
                       VerticalAlignment="Center"
                       Margin="5"/>
            <xctk:ColorPicker x:Name="FillColorPicker"
                              IsTabStop="False"
                              Width="50"
                              Margin="5"
                              SelectedColor="{Binding Canvas.SelectedFillColor, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedColorChanged">
                        <i:InvokeCommandAction Command="{Binding ChangeFillColorCommand}"
                                               CommandParameter="{Binding Canvas.SelectedFillColor}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </xctk:ColorPicker>

            <CheckBox Content="Заливка"
                      VerticalAlignment="Center"
                      IsChecked="{Binding Canvas.HasFill}"
                      Margin="10,0,0,0"/>

            <!-- Простая советская вертикальная линия -->
            <Border Background="White"
                    Width="2"
                    Height="33"
                    Margin="10,0"
                    HorizontalAlignment="Center">
            </Border>

            <StackPanel x:Name="ToolOptionsPanel"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <!-- Поле для угла поворота -->
                <StackPanel x:Name="RotationPanel"
                            Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility"
                                    Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.ToolController.IsCreateToolActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.ToolController.IsCreateToolActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Угол (°):"
                               VerticalAlignment="Center"
                               Margin="5,0,5,0"/>
                    <TextBox Width="50"
                             Margin="5"
                             Padding="2"
                             BorderThickness="1"
                             BorderBrush="Gray"
                             Text="{Binding DataContext.ToolController.CurrentCreateTool.DefaultRotationAngle, 
                                       RelativeSource={RelativeSource AncestorType=Window}, 
                                       Mode=TwoWay, 
                                       UpdateSourceTrigger=PropertyChanged, 
                                       Converter={StaticResource StringToFloatConverter}}"/>
                </StackPanel>
                <!-- Поле для количества углов -->
                <StackPanel x:Name="PolygonSidesPanel"
                            Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility"
                                    Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.ToolController.IsPolygonToolActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.ToolController.IsPolygonToolActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Количество углов:"
                               VerticalAlignment="Center"
                               Margin="5,0,5,0"/>
                    <TextBox Width="50"
                             Margin="5"
                             Padding="2"
                             BorderThickness="1"
                             BorderBrush="Gray"
                             Text="{Binding DataContext.ToolController.CurrentCreateTool.PolygonSides, 
                                       RelativeSource={RelativeSource AncestorType=Window}, 
                                       Mode=TwoWay, 
                                       UpdateSourceTrigger=PropertyChanged, 
                                       Converter={StaticResource StringToIntConverter}}"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <StackPanel x:Name="DynamicControlsPanel"
                    DockPanel.Dock="Bottom"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="5"/>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding Canvas.CanvasSize}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.PercentZoom}"/>
            </StatusBarItem>
        </StatusBar>

        <Grid x:Name="MainGrid">
            <glWpfControl:GLWpfControl x:Name="OpenTkControl"
                                       Focusable="True"
                                       Cursor="{Binding ToolController.CurrentCursor}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding MouseUpCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                        <i:InvokeCommandAction Command="{Binding MouseWheelCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </glWpfControl:GLWpfControl>


            <Border BorderThickness="1"
                    CornerRadius="2"
                    Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                    Width="75"
                    Margin="5"
                    Padding="5"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3"
                                      Opacity="0.5"/>
                </Border.Effect>
                <StackPanel>
                    <WrapPanel x:Name="ToolsPanel"
                               HorizontalAlignment="Center"/>
                </StackPanel>
            </Border>

            <Border
                BorderThickness="1"
                CornerRadius="2"
                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                Width="150"
                Margin="5"
                Padding="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Visibility="{Binding Canvas.IsShapesVisible}">

                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3"
                                      Opacity="0.5"/>
                </Border.Effect>

                <ListBox x:Name="LayersPanel"
                         ItemsSource="{Binding Canvas.Shapes}"
                         HorizontalAlignment="Center"
                         Style="{StaticResource ListboxStyle}"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="120"
                                  Margin="5">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ToolController.SelectShapeInListCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                               CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding IconPath}"
                                       Width="20"
                                       Height="20"
                                       VerticalAlignment="Center"
                                       Margin="5"
                                       Grid.Column="0"/>
                                <TextBlock Text="{Binding ShapeType}"
                                           VerticalAlignment="Center"
                                           Grid.Column="1"
                                           HorizontalAlignment="Stretch"
                                           TextTrimming="CharacterEllipsis"/>
                                <ToggleButton x:Name="VisibilityToggle"
                                              IsChecked="True"
                                              Grid.Column="2"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding DataContext.ChangeShapeVisibilityCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                                   CommandParameter="{Binding ElementName=VisibilityToggle}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Image x:Name="VisibilityIcon"
                                                   Width="16"
                                                   Height="16"
                                                   Margin="0,0,8,0"
                                                   Source="pack://siteoforigin:,,,/assets/icons/view.png"/>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked"
                                                         Value="False">
                                                    <Setter TargetName="VisibilityIcon"
                                                            Property="Source"
                                                            Value="pack://siteoforigin:,,,/assets/icons/hide.png"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked"
                                                         Value="True">
                                                    <Setter TargetName="VisibilityIcon"
                                                            Property="Source"
                                                            Value="pack://siteoforigin:,,,/assets/icons/view.png"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <StackPanel Grid.Column="3"
                                            Grid.Row="0"
                                            Grid.RowSpan="2"
                                            VerticalAlignment="Center">
                                    <Button Content="↑"
                                            Width="20"
                                            Height="20"
                                            Margin="2,0,2,2"
                                            Command="{Binding DataContext.MoveShapeUpCommand, 
                                    RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding}"/>
                                    <Button Content="↓"
                                            Width="20"
                                            Height="20"
                                            Margin="2,2,2,0"
                                            Command="{Binding DataContext.MoveShapeDownCommand, 
                                    RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Border>
        </Grid>
    </DockPanel>
</Window>
